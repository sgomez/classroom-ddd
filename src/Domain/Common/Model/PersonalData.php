<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

/*
 * This file is part of the `classroom-ddd` project.
 *
 * (c) Aula de Software Libre de la UCO <aulasoftwarelibre@uco.es>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App\Domain\Common\Model;

final class PersonalData
{
    private $email;
    private $address;
    private $phoneNumber;

    public function __construct(Email $email, Address $address, PhoneNumber $phoneNumber)
    {
        $this->email = $email;
        $this->address = $address;
        $this->phoneNumber = $phoneNumber;
    }

    public function email(): Email
    {
        return $this->email;
    }

    public function address(): Address
    {
        return $this->address;
    }

    public function phoneNumber(): PhoneNumber
    {
        return $this->phoneNumber;
    }

    public function withEmail(Email $email): PersonalData
    {
        return new self($email, $this->address, $this->phoneNumber);
    }

    public function withAddress(Address $address): PersonalData
    {
        return new self($this->email, $address, $this->phoneNumber);
    }

    public function withPhoneNumber(PhoneNumber $phoneNumber): PersonalData
    {
        return new self($this->email, $this->address, $phoneNumber);
    }

    public static function fromArray(array $data): PersonalData
    {
        if (!isset($data['email']) || !\is_string($data['email'])) {
            throw new \InvalidArgumentException("Key 'email' is missing in data array or is not a string");
        }

        $email = Email::fromString($data['email']);

        if (!isset($data['address']) || !\is_string($data['address'])) {
            throw new \InvalidArgumentException("Key 'address' is missing in data array or is not a string");
        }

        $address = Address::fromString($data['address']);

        if (!isset($data['phoneNumber']) || !\is_string($data['phoneNumber'])) {
            throw new \InvalidArgumentException("Key 'phoneNumber' is missing in data array or is not a string");
        }

        $phoneNumber = PhoneNumber::fromString($data['phoneNumber']);

        return new self(
            $email,
            $address,
            $phoneNumber
        );
    }

    public function toArray(): array
    {
        return [
            'email' => $this->email->toString(),
            'address' => $this->address->toString(),
            'phoneNumber' => $this->phoneNumber->toString(),
        ];
    }
}
